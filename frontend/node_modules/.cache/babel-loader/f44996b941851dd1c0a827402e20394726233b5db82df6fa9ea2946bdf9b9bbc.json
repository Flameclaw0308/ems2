{"ast":null,"code":"import React,{useState,useEffect}from'react';import UserService from'../service/UserService';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProfilePage(){const[profileInfo,setProfileInfo]=useState({});useEffect(()=>{fetchProfileInfo();},[]);const fetchProfileInfo=async()=>{try{const token=localStorage.getItem('token');// Retrieve the token from localStorage\nconst response=await UserService.getYourProfile(token);setProfileInfo(response.ourUsers);}catch(error){console.error('Error fetching profile information:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-page-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Id: \",profileInfo.id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Name: \",profileInfo.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",profileInfo.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"City: \",profileInfo.city]}),profileInfo.role===\"ADMIN\"&&/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/update-user/\".concat(profileInfo.id),children:\"Update This Profile\"})})]});}export default ProfilePage;","map":{"version":3,"names":["React","useState","useEffect","UserService","Link","jsx","_jsx","jsxs","_jsxs","ProfilePage","profileInfo","setProfileInfo","fetchProfileInfo","token","localStorage","getItem","response","getYourProfile","ourUsers","error","console","className","children","id","name","email","city","role","to","concat"],"sources":["C:/Users/ANIRUDH/Desktop/ems/frontend/src/components/userspage/ProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserService from '../service/UserService';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction ProfilePage() {\n    const [profileInfo, setProfileInfo] = useState({});\n\n    useEffect(() => {\n        fetchProfileInfo();\n    }, []);\n\n    const fetchProfileInfo = async () => {\n        try {\n\n            const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n            const response = await UserService.getYourProfile(token);\n            setProfileInfo(response.ourUsers);\n        } catch (error) {\n            console.error('Error fetching profile information:', error);\n        }\n    };\n\n    return (\n        <div className=\"profile-page-container\">\n            <h2>Profile Information</h2>\n            <p>Id: {profileInfo.id}</p>\n            <p>Name: {profileInfo.name}</p>\n            <p>Email: {profileInfo.email}</p>\n            <p>City: {profileInfo.city}</p>\n            {profileInfo.role === \"ADMIN\" && (\n                <button><Link to={`/update-user/${profileInfo.id}`}>Update This Profile</Link></button>\n            )}\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIxC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAElDC,SAAS,CAAC,IAAM,CACZU,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CAEA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;AAC7C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,WAAW,CAACc,cAAc,CAACJ,KAAK,CAAC,CACxDF,cAAc,CAACK,QAAQ,CAACE,QAAQ,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC/D,CACJ,CAAC,CAED,mBACIX,KAAA,QAAKa,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACnChB,IAAA,OAAAgB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5Bd,KAAA,MAAAc,QAAA,EAAG,MAAI,CAACZ,WAAW,CAACa,EAAE,EAAI,CAAC,cAC3Bf,KAAA,MAAAc,QAAA,EAAG,QAAM,CAACZ,WAAW,CAACc,IAAI,EAAI,CAAC,cAC/BhB,KAAA,MAAAc,QAAA,EAAG,SAAO,CAACZ,WAAW,CAACe,KAAK,EAAI,CAAC,cACjCjB,KAAA,MAAAc,QAAA,EAAG,QAAM,CAACZ,WAAW,CAACgB,IAAI,EAAI,CAAC,CAC9BhB,WAAW,CAACiB,IAAI,GAAK,OAAO,eACzBrB,IAAA,WAAAgB,QAAA,cAAQhB,IAAA,CAACF,IAAI,EAACwB,EAAE,iBAAAC,MAAA,CAAkBnB,WAAW,CAACa,EAAE,CAAG,CAAAD,QAAA,CAAC,qBAAmB,CAAM,CAAC,CAAQ,CACzF,EACA,CAAC,CAEd,CAEA,cAAe,CAAAb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}